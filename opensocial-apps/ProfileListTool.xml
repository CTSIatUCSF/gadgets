<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs title="ListMaker" author="Eric Meeks">
        <Require feature="views" />
		<Require feature="settitle"/>
        <Require feature="osapi" />
        <Require feature="minimessage" />
        <Require feature="dynamic-height" />
        <Require feature="orng" />
        <Require feature="jsonld"/>
		<Require feature="start-hidden" />
    </ModulePrefs>
    <Content type="html" view="canvas, small"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
    
        <!-- #includes -->
        <link rel="stylesheet" href="css/gadget.css" type="text/css" media="screen, projection" >
        <link rel="stylesheet" href="css/inst.css" type="text/css" media="screen, projection" >
        <link rel="stylesheet" href="css/jquery-ui.min.css" type="text/css" media="screen, projection" >
	    <script type="text/javascript" src="js/os.js" ></script>
	    <script type="text/javascript" src="js/ontology.js" ></script>
        <script type="text/javascript" src="js/jquery-1.11.1.min.js"></script>
        <script type="text/javascript" src="js/jquery-ui.min.js"></script>
        <script type="text/javascript" src="js/environment.js"></script>
                
        <style>
            .tool_title {font-size:14px;}
            .tool_title_orange {font-weight:bold; font-size:14px; color:#CA7C29;margin-top:-1px;}
            .tool_body {font-size:12px;}
            .tool_credit {font-size:10px;}
            .tool_table_cell {ffont-size:12px; padding:0 20px 0 0;}
            .tool_table_cell_small {font-size:11px;}
            .tool_table_cell_small span a {font-size:11px;}
            .tool_table_cell_small span {font-size:11px;display:inline-block;margin-right: -15px; }
            .tool_toggle_button {font-size: 13px;padding:0 5px;}          
    	</style>

        <script type="text/javascript">
        
        // ==============================================================

        function gadgetEventTrack(action, label, value) {        
			var message = {'action' : action};
			if (label) {message.label = label;}
			if (value) {message.value = value;}
			
			gadgets.orng.reportGoogleAnalyticsEvent(message);
        }        
        // ==============================================================
        
        function showHelp() {
		var msg = new gadgets.MiniMessage();
        	msg.createDismissibleMessage("<span class='helptxt'>First add all the profiles that you're interested in to your list. Then click 'Go to my list' to go to the screen that shows all the things you can do with your list of profiles. For example you can email them or export contact information.</span>", function() {
			gadgets.window.adjustHeight(75);
			return true;});
		gadgets.window.adjustHeight();
        }
        // ==============================================================
        
        function newProfilesMetadataCallback(message) {
        	 // only make gadget visible if we have something to show
             if (message) {
             	gadgets.orng.showGadget();
             }
             else {
             	return;	                        
			 }             	
        	 var stats = gadgets.json.parse(message);
             // display the action item table and update it
             $("#actions").show();
             if (message === 0) {
	                document.getElementById("add_profiles").innerHTML = "No Profiles found";             	
             }
        	 else {
	                document.getElementById("add_profiles").innerHTML = "<a style='font-size:11px;' href='javascript:addNewProfiles();'>Add " + message + " to list</a>";
        	 }
        }
        
        function showWaiting(waiting) {
        	if (waiting) {
				$("#actions").hide();
				$("#waiting").show();
        	}
        	else {
        		$("#actions").show();
				$("#waiting").hide();
        	}
		}        	
        
        function addNewProfiles() {
      		showWaiting(true);
            //document.getElementById("add_profiles").innerHTML = "Adding profiles...";		                    
            //document.getElementById("list_profiles").innerHTML = "Merging into list...";		                    
            readIdsFromDB(function(existingIds) {
            	gadgets.orng.getPeopleList( newProfilesCallback(existingIds));
            });
        }
                
        function newProfilesCallback(existingIds) {
        	return function(message) {
		        // extract the array of incoming person IDs
		        var newIds =  gadgets.json.parse(message);

	            var priorListSize = getListSize(existingIds);
	            
	            // merge the incoming and existing person ID arrays
	            // existing array already populated
	        	for (var baseURI in newIds) {
					if (!existingIds.hasOwnProperty(baseURI)) {
	        			existingIds[baseURI] = [];
	        		}
	       			existingIds[baseURI] = dedupeArray(existingIds[baseURI].concat(newIds[baseURI]));
	        	}
	
	            var newListSize = getListSize(existingIds);

	            showCurrentListSize(newListSize);
	            if (newListSize > priorListSize) {
		            saveData(existingIds, function() {
	                    document.getElementById("add_profiles").innerHTML = ((newListSize - priorListSize) === 1 ? "1 new profile added" : "" + (newListSize - priorListSize) + " new profiles added");
	                    showCurrentListSize(newListSize);
		            });
				}
		        else {
		            document.getElementById("add_profiles").innerHTML = "No new profile(s) to add";
		        }	
		        showWaiting(false);	                
        	};
        }
        // ==============================================================
        
        function getListSize(ids) {
            var cnt = 0;
        	for (var baseURI in ids) {
        		cnt += ids[baseURI].length;
        	}
        	return cnt;
        }   
        // ==============================================================
                        
        function showCurrentListSize(count) {
        	if (count > 0) {
        		document.getElementById("list_profiles").innerHTML = "<a href='javascript:gadgets.views.requestNavigateTo(\"canvas\");'>Go to my list - " + count + " profile" + (count == 1 ? "" : "s") + "</a>";
        	}
        	else {
        		document.getElementById("list_profiles").innerHTML = "List is currently empty";
        	}		                            		
        }

        function toURIList(existingIds) {
        	var uriList = [];
        	for (var baseURI in existingIds) {
        		for (var i = 0; i < existingIds[baseURI].length; i++) {
        			uriList.push(baseURI + existingIds[baseURI][i]);
        		}
        	}
        	return uriList;
        }
        
        // first argument is an map of data, 
    	// second argument is the callback function to execute after updating the data    	    	     
   		function saveData(ids, callback) {   
            osapi.appdata.update({'userId': '@viewer', 'appId':'@app', 'data': {'count' : getListSize(ids), 'ids' : gadgets.json.stringify(ids)}}).execute(callback);
	    }
        // ==============================================================
        
	    function readCountFromDB(callback) {
	        osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields':['count']}).execute(function(result) {	                        
			 	// a map of {baseURI1 : ["string", "string"], baseURI2 : ["string", "string"]}
	        	var count = os.osapi.getViewerFromResult(result).count || 0;
	        	callback(count);
	        });
	    }

	    function readIdsFromDB(callback) {
	        osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields':['ids']}).execute(function(result) {	                        
			 	// a map of {baseURI1 : ["string", "string"], baseURI2 : ["string", "string"]}
	        	var existingIds = os.osapi.getViewerFromResult(result).ids || "{}";
	        	callback(gadgets.json.parse(existingIds));
	        });
	    }
        // ==============================================================        

	    function deleteList() {
		    osapi.appdata['delete']({'userId':'@viewer', 'appId':'@app', 'fields': ['ids', 'count']} )
		            .execute(function(result){
		            if (result.error) { 
		                    alert("Error " + result.error.code + " deleting application data: " + result.error.message);
		            } else {
		                    document.getElementById("canvas_email_list_textarea").value = "";
		                    document.getElementById("canvas_full_list_textarea").value = "";
		                    document.getElementById("canvas_profile_list").innerHTML = "";
		                    document.getElementById("number_selected").innerHTML = "Select Profiles";
		            }                                
		    }); /* end osapi.appdata.delete */
			finishLoad();
	    }    
        // ==============================================================        
        
        function dedupeArray(arrHasDupes) {
			var deduped = [];
			$.each(arrHasDupes, function(i, el){
			    if($.inArray(el, deduped) === -1) deduped.push(el);
			});
			return deduped;       
        }
        // ==============================================================     

        var loadedCount = 0; 
        function displayProfileList(existingIds) {    
        	var uris = toURIList(existingIds);  				
			var properties = [RDF('type'), PRNS('fullName'), VIVO('preferredTitle'), VIVO('email')];
				                 
            if (uris.length > 0) {
                $(document).ready(function () {
                    $(".list-content").block({ message: '<div class="progress-msg">Loading <span id="loaded-count">1</span> of ' + uris.length + '</div>'});
                });                
                displaySubList(uris, 2, properties, 0);
            }          
            $("#list-size").text(uris.length);                                
		} /* end displayProfileList */
        
		function displaySubList(uris, batchSize, properties, loaded) {
			var ids = uris.splice(0, batchSize);
            osapi.jsonld.getProperties(ids, properties).execute(function(data) {
            	var uriBase = '';
                framePeople(data, function(profiles) {
                	for (var k = 0; k < profiles.length; k++) {
                    	var profile =  profiles[k];
		                var table_row = '<tr>'; 
		                table_row +='<td>' + (profile[PRNS('fullName')]?profile[PRNS('fullName')]:"") + '</td>';
		                table_row +='<td>' + (profile[VIVO('preferredTitle')]?profile[VIVO('preferredTitle')]:"") +'</td>';
		                table_row +='<td class="email">' + (profile[VIVO('email')]?profile[VIVO('email')]:"") + '</td>';
		                table_row +='</tr>';
		                $(".list-content table tbody").append(table_row);                                        	
					}
					loadedCount += batchSize;
					$("#loaded-count").text(loadedCount);
	                // see if we are done and if so turn off progress bar and
	                // add to export lists 
	                if (uris.length == 0) {
						$(".list-content").unblock();
	                }
					else {
						displaySubList(uris, batchSize, properties, loaded);
					}
		       	});
			});
		}

		function finishLoad() {
	        var full_list = "";
	        var email_list = "";
	        $("#canvas_profile_list tr").each(function(index, tr) {
	                if(!$(tr).attr("id")) {
	                        return true;
	                }
	                var row = "";
	                $("td", tr).each(function(fld_index, td){
	                        var txt = $(td).text(); 
	                        row += txt + ";";
	                        if(fld_index == 2 && txt != "") {
	                                email_list += txt + "\n";
	                        }
	                });
	                full_list += row + "\n";
	        });
	        document.getElementById("canvas_full_list_textarea").value = full_list;
	        document.getElementById("canvas_email_list_textarea").value = email_list;
	           
	        //document.getElementById("progress").style.display="none";
		}
        
        // ==============================================================                
                
        function copyEmailDivToClipboard() {
                
                $("#canvas_email_list").show();
                $("#canvas_email_list_text").show();
                $("#canvas_full_list").hide();
                $("#canvas_full_list_text").hide();
                $("#canvas_profile_list").hide();        
        }
        // ==============================================================                
                
        function copyFullDivToClipboard() {
                $("#canvas_full_list").show();
                $("#canvas_full_list_text").show();
                $("#canvas_email_list").hide();
                $("#canvas_email_list_text").hide();
                $("#canvas_profile_list").hide();
        }        
        // ==============================================================                        
        var root = (typeof ENV_LOCAL_URL === 'undefined')? "": ENV_LOCAL_URL;
        var chatterProxyURL = root + "/chatter/ChatterProxyService.svc"; 

        function getNodeIdFromURI(uri) {
           if (typeof uri === 'string') { 
                   var c = uri.split('/');
                   return c[c.length-1];
           }
           else {
               var retval = [];
               for ( i = 0; i < uri.length; i++) {
                        retval[i] = getNodeIdFromURI(uri[i]);
               } 
                return retval;
           }
        }
        
        function createGroup(name, description, ownerId, users) {
                document.getElementById("progress").style.display="block";

                var params = {
                        "name": name,
                        "description": description,
                        "ownerId": ownerId,
                        "users": users};
                        
            sendRequest(false, false, chatterProxyURL + "/group/new", params, function(data) {
                document.getElementById("progress").style.display="none";
                    if(data.Success) {
                                showMessage("<strong>Success! Your UCSF Chatter group '" + name + "' has been created.</strong><br> " 
                                                + "<a target='_blank' href='" + data.URL + "'>Go to UCSF Chatter to start working with your group.</a>");
                                $("input#goup_name").val("");
                        }
                        else {
                                showMessage("Cannot create a group. " + data.ErrorMessage, true);
                        }
            },
            function(obj) {
                        showMessage("Server error " + obj.rc + " : " + obj.errors, true);
            });
        }
                        
        // ==============================================================                        
        function sendRequest(cache, signed, url, post_params, success, error) {
          var params = {};                         
          if (signed) {
            params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.SIGNED;
          }
          params[gadgets.io.RequestParameters.POST_DATA] = gadgets.io.encodeValues(post_params);
          params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
          params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
          if(cache == false) {
                  params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
          }
                            
          gadgets.io.makeRequest(url, function(obj) {
                  if(obj.data != null) {
                          success(obj.data);
                }
                else if(obj.errors != null) {                                  
                          if(error) {
                                  error(obj);
                          }
                }
          } 
          , params);
        }
        
        // ==============================================================                                
        function showMessage(msg, isError) {
                $("div.message").html(msg);
                if(isError == true) {
                        $("div.message").removeClass("info");        
                        $("div.message").addClass("error");
                }
                else {
                        $("div.message").removeClass("error");        
                        $("div.message").addClass("info");
                }
                $("div.message").removeClass("hidden");        
        }
        
        // ==============================================================                        
        function getUserList() {
                var items = [];
                $("div#canvas_profile_list tr").each( function(index, elem) {
                        var id = $(elem).attr("id");
                        if(id != null && id != "") {
                                items.push(getNodeIdFromURI(id));
                        }
                }); 
                
                return items.join(',');
        }
        // ==============================================================                        
        </script>]]></Content>
    <Content type="html" view="small" preferred_height="75" preferred_width="190"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
                
        <table id="button_and_help" cellspacing="2" cellpadding="0" style="display:block;">
                <tr>
                        <td class="tool_table_cell_small" style="width:160px;padding:4px 0">Create a list of profiles <br />for personal use.</td>
                        <td><img src="images/hovertiptarget.png" border="0" onClick="gadgetEventTrack('help');showHelp()"></td>
                </tr>
        </table>
        
        <img id="waiting" src="images/waiting.gif" style="display:none;">
        <table id="actions" style="display:none;clear:right;" cellspacing="2" cellpadding="0">
                <tr>
                        <td class="tool_table_cell_small"><span id="add_profiles" onClick="gadgetEventTrack('add_profiles')"></span></td>
                </tr>
                <tr>
                        <td class="tool_table_cell_small" valign="top" style="padding-top:4px"><span id="list_profiles" onClick="gadgetEventTrack('list_profiles')">Loading...</span></td>
                </tr>
        </table>
        
        <script type="text/javascript">
                function init() {
                	// see what data we already have
	               	readCountFromDB( function(count) {
	               		showCurrentListSize(count);
	               	});               
	               	// look for data on the RPC channel, this will overwrite any owner data              	
	               	gadgets.orng.getPeopleListMetadata(newProfilesMetadataCallback);
                }        
                
                gadgets.util.registerOnLoadHandler(init);
        </script>]]></Content>
    <Content type="html" view="canvas" preferred_height="620" preferred_width="700"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
           <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
           <script type="text/javascript" src="js/jquery.blockUI-2.66.0.js"></script>    
           <style type="text/css">
                   div#create_group {
                           margin-left: 20px;
                           margin-top:10px;
                           margin-bottom:10px;
                           padding-top:10px;
                           padding-bottom:10px;
                           padding-left:10px;
                           padding-right:10px;
                           border:solid #CCC 1px;
                           width:470px;
                           border-radius: 0;
                   }
                   input#close {
                           margin-left:10px;
                   }
                   div.message {
                           margin-bottom:10px;
                   }
                   div.info {
                           color:green;
                   }
                   div.error {
                           color:red;
                   }
                   .hidden {
                           display:none;
                   }
                p { width: 640px; }
            
            
                .list-info {font-weight:bold; font-size:14px; color:#CA7C29;}
                .list-descr {margin-top: 10px;}
                #more-info {color: #0088CC !important; cursor: pointer;}
                .commands {margin-top: 20px;}
                .commands .row{ margin-top: 10px;}
                .commands label {width: 100px; text-align: right;font-weight: bold; font-size: 13px; margin-right: 10px;}
                .list-content {margin-top: 30px; height: 300px; overflow-y: auto;}
                .list-content th {text-align: left; padding-bottom: 5px;}                
                .list-content th.name {width: 180px;}
                .list-content th.title {width: 180px;}
                .list-content th.email {width: 200px;}
                .btn:hover{color:white;}
                
                .ui-tooltip {max-width: 500px;}
                .help-content div {margin-bottom: 10px;}
                .help-content ul {list-style-type: disc; margin-left: 30px;}
                .help-content li {margin-bottom:5px;}
                
                .progress-msg {margin:5px;}
           </style>
    
        <div style="width:640px;">
        		<div class="list-info">There are currently <span id="list-size">48</span> people in your list.</div>
        		<div class="list-descr">Choose what you'd like to do with their information. <span id="more-info">More information on the options</span></div>
        		
        		<div class="commands">
        			<div class="row">
        				<label>Email</label>
        				<button class="btn btn-sm" id="create-email">
		      				<span class="glyphicon glyphicon-pencil"></span>
		      				Compose email
		    			</button>
        			</div>
        			<div class="row">
        				<label>Open as CSV</label>
        				<button class="btn btn-sm" id="save-list">
		      				<span class="glyphicon glyphicon-save"></span>
		      				Download List
		    			</button>
        				<button class="btn btn-sm" id="save-pubs">
		      				<span class="glyphicon glyphicon-floppy-save"></span>
		      				Download Pubs
		    			</button>
        			</div>
        			<div class="row">
        				<label>Connect with</label>
        				<button class="btn btn-sm" id="create-doodle">
		      				<span class="glyphicon glyphicon-gift"></span>
		      				Create Doodle Poll 
		    			</button>
        				<button class="btn btn-sm" id="create-chatter-group">
		      				<span class="glyphicon glyphicon-cloud-upload"></span>
		      				Create Chatter group
		    			</button>
        			</div>
        			<div class="row">
        				<label>Manage</label>
        				<button class="btn btn-sm" id="clear-list">
		      				<span class="glyphicon glyphicon-trash"></span>
		      				Clear this list
		    			</button>
        			</div>
        		</div>
        		<div class="list-content">
        		  <table cellspacing='0' cellpadding='0'>
        		      <thead>
	        		      <tr>
		        		      <th class="name">Name</th>
		                      <th class="title">Title</th>
		                      <th class="email">Email Address</th>
	                      </tr>
                      </thead>
                      <tbody/>
        		  </table>
        		</div>
        		
        		<div style="display:none">
        		  <div id="commands-help">
        		      <div class="help-content">
	        		      <div>You can see the list you’ve created below. It will be here next time you sign in, but the data in it might go stale as information in Profiles changes. Here’s an explanation of the options:</div>
	        		      <ul>
	        		          <li>The Compose Email button opens your default email program and pastes the first 50 email addresses from your list into the To field. This is to help you quickly reach out to people in your list. The number is limited to prevent spam.</li>
	                          <li>The Download List button exports a CSV-format file that you can save wherever you wish. It will have columns for first name, last name, title, email address, school, department, link to profile page, manually entered research interests and the first ten published concepts (MeSH terms) for everyone in your list. CSV files are easily imported into Excel or most email marketing programs like MailChimp, to help you create personalized emails and track their effectiveness.</li>
	                          <li>Download Pubs will download a list of publications, duplicates removed, for all the people in the list. It will contain columns for Authors, PubDate, PubYear, JournalMonth, JournalDay, JournalYear, ArticleTitle, JournalTitle, Issue, MedlinePgn, PMID, and Link to PubMed</li>
	                          <li>Create Doodle Poll is TBD.</li>
	                          <li>Create Chatter Group will take you to UCSF Chatter to create a group with the people in your list. Within Chatter, you can collaborate online - share documents, post messages to the group, etc.</li>
	                          <li>Clear this List will remove everyone from your list.</li>
	        		      </ul>
                      </div>
        		  </div>
        		</div>
        		
                <!--p id="number_selected" class="tool_title_orange" style="margin-left:20px;margin-top:20px\9;">Selected Profiles<p>
                <p id="canvas_help" style="padding-left:20px">Create a UCSF Chatter group or email list that includes the people below. 
                							To manage your UCSF Chatter group after you create it, such as adding or removing members, go to UCSF Chatter directly.</p>                							
                							
                <p class="tool_body" style="margin-left:20px; margin-bottom:10px;">
                        <div id="extended_functions" style="display:inline-block; padding:0 0 0 20px;">
                                <a href="" id="create_group">Create UCSF Chatter Group</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;
                                <a href="javascript:gadgetEventTrack('export_email');copyEmailDivToClipboard();">Export email addresses</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp; 
                                <a href="javascript:gadgetEventTrack('export_all_data');copyFullDivToClipboard();">Export all contact info</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;
                                <a href="" id="compose-email">Compose email to list</a><p>
                        </div>
                        <a href="javascript:gadgetEventTrack('delete_list');deleteList();" style="margin-left:20px;">Delete list</a>
                </p-->                
	    </div>
        <div id="create_group" class="hidden">
                <div class="message hidden"><strong>Success! Your UCSF Chatter group has been created.</strong><br> 
                        Go to UCSF Chatter to start working with your group.</div>
                <table><tr>                
                <td nowrap valign="top">UCSF Chatter Group Name:</td>
                <td><input id="group_name" type="text" style="width:218px"></input><br><br></td></tr><tr>
                <td nowrap valign="top" align="right">Group Description:</td>
                <td><textarea id="group_description" rows="4" cols="25"></textarea><br><br></td></tr><tr><td>&nbsp;</td>
                <td><input id="create" type="button" value="Create"></input>
                <input id="close" type="button" value="Cancel/Close"></input></td></tr></table> 
        </div>
        
        <div id="canvas_email_list" style="display:none; background:#FFF; width:670px; height:50px; margin-left:20px;">
        Copy and paste the email addresses below into an Excel spreadsheet or email client "To" field.
        <input type="button" style="height:22px; font-size:10; margin-left:40px; margin-top: 6px;" value="Close" onClick="document.getElementById('canvas_email_list').style.display='none';document.getElementById('canvas_email_list_text').style.display='none';document.getElementById('canvas_profile_list').style.display='block';"></button>
        </div>
        
        <!-- holds the email address list to be copied to the clipboard -->
        <div id="canvas_email_list_text" style="display:none; width:658px; height:450px; color:#000; margin:0px 5px 0px 5px;">
        <textarea id="canvas_email_list_textarea" rows="27" cols="78" style="border:1px solid #CCC; margin: 0px 8px 0px 8px;">
        </textarea>
        </div>
        
        <div id="canvas_full_list" style="display:none; background:#FFF; width:640px; height:50px; margin-left: 20px;">
        Copy and paste the profile data below into an Excel spreadsheet or external text editor.
        <input type="button" style="height:22px; font-size:10; margin-left:40px; margin-top: 6px;" value="Close" onClick="document.getElementById('canvas_full_list').style.display='none';document.getElementById('canvas_full_list_text').style.display='none';document.getElementById('canvas_profile_list').style.display='block';"></button>
        </div>
        
        <!-- holds the full profile list to be copied to the clipboard -->
        <div id="canvas_full_list_text" style="display:none; width:640px; height:450px; color:#000; margin:0px 5px 0px 5px;">
        <textarea id="canvas_full_list_textarea" rows="27" cols="78" style="border:1px solid #CCC; margin: 0px 8px 0px 8px;">
        </textarea>
        </div>        
        
        
        <script type="text/javascript">

            function init() {
	    		// mask all but delete until we are done loading
                   gadgets.window.setTitle("ListMaker");                
           		// always show in canvas view
                   gadgets.orng.showGadget();
                   
                $(document).ready(function () {
                   $(document).tooltip({
                       items:"#more-info",
                       content: function() {
                           return $("#commands-help").html();
                       }
                   });
                });                
                    
                // update UI
                readIdsFromDB(displayProfileList);                
                    
                $("a#create_group").click(function(event){
                    event.preventDefault();
                    $("div.message").addClass("hidden");        
                    $("div#create_group").removeClass("hidden");
                });
                 
                $("input#close").click(function(event){
                        $("div#create_group").addClass("hidden");
                });
                     
                $("input#create").click(function(event){
                        $("div.message").addClass("hidden");        
                        var name = $("div#create_group input#group_name").val();
                        var description = $("div#create_group #group_description").val();
                        if(name == null || name == '') {
                                showMessage("Please enter a group name.", true);
                        }
                        else {                                
                                osapi.people.getViewer({ fields: ['id'] }).execute(function(result) {
                                        var users = getUserList();
                                        createGroup(name, description, getNodeIdFromURI(result.id), users);
                                });                        
                        }
                });

                $("#clear-list").click(function(event){
		           osapi.appdata['delete']({'userId':'@viewer', 'appId':'@app', 'fields': ['ids', 'count']} ).execute(function(result){
		                  if (result.error) { 
		                          alert("Error " + result.error.code + " deleting application data: " + result.error.message);
		                  } else {
		                   $(".list-content tbody tr").remove();
		                  }                                
		           });
                });
                     
                $("#create-email").click(function(event){
	                var emails = [];
	                var emailElem = $(".list-content td.email");
	                if(emailElem.size() > 50) {
	                       if(!confirm("Only the first 50 email addresses can be used. If your list has more, please use the Export function and paste them into email. Do you want to proceed?")) {
	                          event.preventDefault();
	                          return false;
	                       }
	                }        	                    
	                emailElem.each(function(index, elem) {
	                     var email = $.trim($(elem).text());
	                     if(email != '') {
	                         emails.push(email);
	                     }
	                     if(emails.length >= 50) {
	                         return false;
	                     }
	                });
	                if(emails.length > 0) {
	                     window.location.href =  "mailto:" + emails.join(';');
	                }
                });
            }
                
	        gadgets.util.registerOnLoadHandler(init);
        </script>]]></Content>
</Module>