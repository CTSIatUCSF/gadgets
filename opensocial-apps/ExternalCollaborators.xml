<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs title="External Co-Authors"
				 description="External Co-Authors" width="190">
        <Require feature="opensocial-0.9" />
		<Require feature="dynamic-height" />
		<Require feature="osapi" />
		<Require feature="orng" />
		<Require feature="jsonld" />
        <Require feature="views" />
		<Require feature="start-hidden" />
		<Require feature="settitle"/>
	</ModulePrefs>

	<!-- ==================== START COMBINED VIEWS ==================== -->

	<Content type="html" view="sandbox" preferred_width="590"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
	<h4 style="padding-left:12px;">Add External Co-authors to Your Profiles Installation!</h4>
To add do this:<br>
<code>
INSERT [ORNG.].Apps ( AppID ,  Name , Url , Enabled)
VALUES  ( 119 ,' External Co-Authors', 'http://profiles.ucsf.edu/apps_2.6/ExternalCollaborators.xml', 1);
 
INSERT [ORNG.].AppViews ( AppID ,Page ,[View] ,ChromeID , Visibility ,DisplayOrder , OptParams)
VALUES  ( 119, 'profile/display.aspx' , 'small', 'gadgets-network', 'Public', 1, '{''chrome_class'':''gadgets-gadget-network-chrome''}');

INSERT [ORNG.].AppViews ( AppID ,Page ,[View] ,ChromeID , Visibility ,DisplayOrder , OptParams)
VALUES  ( 119, 'orng/gadgetdetails.aspx' , 'canvas', 'gadgets-detail', 'Public', 1, NULL);
</code><br>
Then you need to add network gadgets to the Profile page by updating the PresentationXML.  Be careful doing this! Instructions are here: 
<a href='http://profiles.ucsf.edu/apps_2.6/AddGadgetsNetworkToPresentationXML.html' target='_blank'>Adding Network Gadgets</a>
   	<script type="text/javascript">
	   	gadgets.util.registerOnLoadHandler(function() {
			gadgets.orng.showGadget();
		});
    </script>
	
    ]]></Content>
    <Content type="html" view="verify, small, canvas">
    <![CDATA[	
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.js"></script>    
    <script type="text/javascript" src="js/environment.js" ></script>
    <script type="text/javascript" src="js/ontology.js" ></script>
    <script type="text/javascript" src="js/jsonld.js" ></script>   	
    <link rel="stylesheet" href="css/gadget.css" type="text/css" media="screen, projection" >
    <link rel="stylesheet" href="css/inst.css" type="text/css" media="screen, projection" >
	<script type="text/javascript">	        
		var COLLABORATED_ON = R2R('collaboratedOn');
	
		function getProductionURI(uri) {
			if (uri.indexOf("http://stage-profiles.ucsf.edu/profiles200") !== -1) {
				return uri.replace("http://stage-profiles.ucsf.edu/profiles200", "http://profiles.ucsf.edu");
			}
			else if (uri.indexOf("http://profilesstage.sc-ctsi.org") !== -1) {
				return uri.replace("http://profilesstage.sc-ctsi.org", "http://profiles.sc-ctsi.org");
			}
			else if (uri == "http://stage-profiles.ucsf.edu/profiles260/profile/190731") {
				return "http://profiles.ucsf.edu/profile/368698";
			}
			return uri;
		}
			
		function readData(callback) {
			osapi.jsonld.getOwnerProperties([PRNS('fullName')]).execute(function(result) {
				if (!result.error) {
					$("#see-all").data("ownerURI", getProductionURI(result.uris[0])).show();
					$(".see-all").show();
					var params = {};
					params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
					var url = 'http://r2r.ucsf.edu/crosslinks/coauthors?researcherURI=' + getProductionURI(result.uris[0]) + '&format=JSON';
                    $("#debug").append('<div class="url">' + url + "</div>"); 
					gadgets.io.makeRequest(url, callback, params);
				}
			}); /* end osapi.appdata.get */			
		}
		
		function gadgetEventTrack(action, label, value) {		
			var message = {'action' : action};
			if (label) {message.label = label;}
			if (value) {message.value = value;}
			
			gadgets.orng.reportGoogleAnalyticsEvent(message);
		}	
		
		function getLabelValue(person) {
			var label = person[RDFS('label')];
			return label['@value'] ? label['@value'] : label;			
		}
				
		function parseCollaborators(collaboratorsStr) {
			var colArr = gadgets.json.parse(collaboratorsStr.data).results.bindings;
			var colMap = {};

			for (var i = 0; i < colArr.length; i++) {
			    $("#debug").append('<div>' + JSON.stringify(colArr[i]) + "</div>"); 
				if (colMap[colArr[i].researcherURI.value]) {
					colMap[colArr[i].researcherURI.value].contributedWork.push(colArr[i].contributedWork.value);
				}
				else {
					var person = {};
					person.researcherURI = colArr[i].researcherURI.value;
					person.contributedWork = [];
					person.contributedWork[0] = colArr[i].contributedWork.value;
					person.image = colArr[i].thumbnail ? colArr[i].thumbnail.value : ENV_PROFILES_URL + "/Profile/Images/default_img.png";
					person.researcherHomePage = colArr[i].researcherHomePage ? colArr[i].researcherHomePage.value : colArr[i].researcherURI.value;
					person.label = colArr[i].researcherLabel.value;
					person.institutionIcon = colArr[i].icon.value;
					person.rns = {};
					person.rns.url = colArr[i].researchNetworkingSite.value;
					person.rns.label = colArr[i].affiliation.value;
					person.rns.lat = colArr[i].lat.value;
					person.rns.lon = colArr[i].lon.value;

					colMap[colArr[i].researcherURI.value] = person;
				}
			}
			var dataArray = [];
			for(var o in colMap) {
			    dataArray.push(colMap[o]);
			}
			return dataArray;
		}
	
    </script>
	]]>
	</Content>
    <Content type="html" view="small" preferred_width="190" preferred_height="340">
	<![CDATA[<!--HTML-->
    <!DOCTYPE html>
    
	<script type="text/javascript">

		// ========================================		
		function displayData(collaboratorsStr) {
			var collaborators = parseCollaborators(collaboratorsStr);
				if (collaborators && collaborators.length) {
					// need to tell container that it is OK to show us
					gadgets.orng.showGadget();

					// put ones with the most publications at the top, since these are all shared publications
					collaborators.sort(function(a, b) {
						return getPropertyAsArray(b, 'contributedWork').length - getPropertyAsArray(a, 'contributedWork').length;
					});
										
					var list_data = "<div><span class='passiveSectionHeadDescription'>People at other institutions who have published with this person.</span>";					
					for (var i = 0; i<3 && i< collaborators.length;i++) {
						var person = collaborators[i];
						list_data += '<div class="col-item">';
						list_data += '<div class="thumbnail"><img src="' + person.image + '" /></div>';						
						list_data += "<a href='" + person.researcherHomePage+ "' target='_blank'> " + person.label + "</a>";
                        list_data += '<div class="thumbnail"><img src="' + person.institutionIcon + '" /></div>';                     
						list_data += "</div>";
						
					}
	       			// close the table
	       			list_data += "</div>";
	                  
	          		// put appdata table markup in designated div
					$("#collaborators_list").append(list_data);					
					$("#see-all span").text(collaborators.length);
					
	          		setTimeout(function(){
						var h = $("#collaborators_list").height() + 60;
						gadgets.window.adjustHeight(h);
			    	}, 1);
			}				
		}
	
	   	gadgets.util.registerOnLoadHandler(function() {
			readData(displayData);
	    	$(document).ready(function () {
	    		$(".see-all").click(function(event) {
			        var ownerURI = $("#see-all").data("ownerURI");
			        gadgetEventTrack('go_to_see_all', ownerURI);
			    	gadgets.views.requestNavigateTo('canvas', {}, ownerURI);
			    	return false;
	    		});
	   			$(".col-item a").live("click", function() {
	   				gadgetEventTrack('go_to_collaborator_from_small', $(this).attr("href"));
	   			});
	    		
	    	});
			
		});
    </script>
    
    <style>
       .col-item {min-height:22px;} 
       .col-item a{margin-right: 3px;}
	   .see-all, .see-all span { font-size: 11px; font-weight: bold; }
    </style>

    <div id="collaborators_list"></div>     
    <div>
        <a class="see-all" href="#" style="display:none"><img src="images/map.jpg" height="45" width="55"></img></a>
    	<a id="see-all" class="see-all" style="display:none" href="#" >
    		<img style="margin-right:0;position:relative;top:1px;border:0" src="images/icon_squareArrow.gif" width="11" height="11"/>
    		See all (<span></span>) people
    	</a>
    </div>
    <div id="debug" style="display:none"></div>	
    
    ]]></Content>
    <Content type="html" view="canvas" preferred_height="120" preferred_width="800">
    <![CDATA[
	   	<script type="text/javascript">
	   		var map;
		   	function loadScript() {
		  		var script = document.createElement('script');
			  	script.type = 'text/javascript';
			  	script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&' +'callback=initialize';
			  	document.body.appendChild(script);
			}
				    
			function initialize() {
		   		var mapOptions = {
		          center: new google.maps.LatLng(39.622, -98.571),
		          zoom: 3
		        };
		        map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
		        				
	    	}		   	
			function readData2(ownerUri, callback) {
				var params = {};
				params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
				var url = 'http://r2r.ucsf.edu/crosslinks/coauthors?researcherURI=' + getProductionURI(ownerUri) + '&format=JSON';
				gadgets.io.makeRequest(url, callback, params);
			}
	    	
	    	var publications = {};
   	    	function loadPubs(callback) {
				var options = {};
				options.output = "full";            	  
		    	osapi.jsonld.getOwner(options).execute(function(data) {
		    		// in this case the owner will be the first and only item returned
		    		framePerson(data, function(owner) {
			    		var publications = owner[VIVO('authorInAuthorship')];
			    		if (publications instanceof Array) {
				    		for (var i in publications) {
				    			var pub = publications[i][VIVO('linkedInformationResource')];
				    			if(pub) {
				    				loadPub(pub);
				    			}					    						    			
				    		}
			    		}
			    		else if (publications) {
			    			var pub = publications[VIVO('linkedInformationResource')];
			    			loadPub(pub);
			    		}
			    		
			    		if(callback) {
			    			var ownerUri = owner['@id'];
			    			readData2(ownerUri, callback);
			    		}
		    		});
	   	    	});
  	    	};	
  	    	    			   	    	
	      	function loadPub(pub) {
				// check if this is an object first!
				if (pub == null || typeof pub != 'object') {
					return;
				}
				var publication = {};
	      		publication.id = pub['@id'].substring(pub['@id'].lastIndexOf('/') +1);

				publication.authorList = pub[PRNS('hasAuthorList')];
				publication.publicationVenue = pub[PRNS('hasPublicationVenue')];
				publication.pd = pub[PRNS('publicationDate')];
	      		publication.year = pub[PRNS('year')];
				publication.label = getLabelValue(pub);
				publication.pmid = pub[BIBO('pmid')]; 
				
				publication.title = publication.authorList + '; <span class="label">' + publication.label + '</span>; ' + publication.publicationVenue + '; ' + publication.year;
				publications[publication.pmid] = publication;	 
	      	}	      	
	    	
	    	function findPublication(pmUrl) {
	    		var id = getPubId(pmUrl);
	    		return publications[id];
	    	}
	    	
	    	function getPubId(pmUrl) {
	    		var parts = pmUrl.split("/");
	    		return parts[parts.length-1];
	    	}
	    	
	    	var CONTRIBUTED_TO = FOAF('publications');
	    	function getPubCount(person) {
				var pubs = person[CONTRIBUTED_TO];
	    		if(pubs instanceof Array) {
	    			return pubs.length;
	    		}
	    		
	    		return 1;
	    	}
	    	
		   	gadgets.util.registerOnLoadHandler(function() {		   	
		   		gadgets.window.adjustHeight(900);
		   		gadgets.orng.showGadget();
		   		loadScript();
		   		osapi.jsonld.getOwner().execute(function(ownerData) {
	                framePerson(ownerData, function(ownerObj) {
	                    gadgets.window.setTitle(ownerObj[PRNS('fullName')]);
	                });
                });		   		
		   		
		   		$(document).ready(function () {		   			
		   			$("a.col-pubs").live("click", function() {
		   				gadgetEventTrack('go_to_coauthored_papers', $(this).attr("href"));
		   			});
		   			
		   			$("a.col-name").live("click", function() {
		   				gadgetEventTrack('go_to_collaborator_from_canvas', $(this).attr("href"));
		   			});
		   		});
		   		
				loadPubs(function(collaboratorsStr) {

					var collaborators = parseCollaborators(collaboratorsStr);
						if (collaborators && collaborators.length) {
							// need to tell container that it is OK to show us
							gadgets.orng.showGadget();
		
							// put ones with the most publications at the top, since these are all shared publications
							collaborators.sort(function(a, b) {
								return getPropertyAsArray(b, 'contributedWork').length - getPropertyAsArray(a, 'contributedWork').length;
							});
									
							$(".total-count").text(collaborators.length);	                  
								
							for (var i = 0; i< collaborators.length;i++) {
								var person = collaborators[i];
								var imageURL = person.image;
								
								var name = person.label;
								var webSite = person.rns.url;
								var lat = person.rns.lat;
								var long = person.rns.lon;
								var university = person.rns.label;

							if (lat && long) {												
							        var myLatlng = new google.maps.LatLng(lat, long);
							        var marker = new google.maps.Marker({
					    				position: myLatlng,
					    				map: map,
					    				title: university
									});
							}		
								var profileUrl = person.researcherHomePage;
								var pmUrl = "pubId";
								
								var pubs = person.contributedWork;
								var pubs_count = 1;
								if(pubs instanceof Array) {
									pubs_count = pubs.length;
									pmUrl = "http://www.ncbi.nlm.nih.gov/pubmed/?term="									
									for(var p=0;p<pubs.length;p++) {
										pmUrl += getPubId(pubs[p]) + ",";
									}
								}
								else {
									pmUrl = pubs['@id'];
								}
								
								var pub = null;//findPublication(pmUrl);
								
								addColoborator(name, profileUrl, imageURL, webSite, pmUrl, pubs_count, pub?pub.title:"", university);								
							}									
						}				
				});		   		 
		   	});	
		   			   	
		   	function addColoborator(name, profileUrl, imageURL, webSite, pmUrl, pubs_count, pubTitle, university) {
		   		var html = '<div class="col">';
		   		    html +='<div class="thumbnail"><img src="' + imageURL + '"></img></div><a href="' + profileUrl + '" target="_blank" class="col-name">'+name+'</a><span class="org">'+university+'</span>';
		   		    
		   		    html +='. <a href="' + pmUrl + '" target="_blank" class="col-pubs">See '+ pubs_count +' coauthored papers in PubMed</a>';
		   		    
		   		    html +='</div>';
		   		    
		   		$("#coll-list").append(html);    
		   	}	   	 
	    </script>

	    <style type="text/css">
	    	#map-canvas { height: 450px}
	    	
	    	.content{width: 600px;margin-left: 100px;}
	    	.map-wrap{width:600px;height: 450px; margin-bottom: 20px;}
	    	.list-wrap{font-size: 13px;line-height: 20px;}	    	 
	    	.title{font-weight: bold; color: #666; margin-bottom: 15px;} 
	    	.descr{margin: 10px; }
	    	#coll-list {margin-left: 10px; height: 300px; overflow-y: auto;}
	    	.col {margin-bottom: 5px;}
	    	.col div {padding-top: 4px;}
	    	.org {margin-left: 10px;} 
	    	.pm-title{margin-left: 30px; width: 500px;}
	    	.pm-link{margin-left: 50px;}
            .thumbnail { margin-right: 4px;}
	    </style>
	    
        <div class="title">External Co-Authors (<span class="total-count">0</span>) found</div>
   		<div class="content">
   			<div class="map-wrap">	
	   			<div id="map-canvas"></div>
	   		</div>		
   			<div class="list-wrap">
   				<div class="descr">External Co-Authors are people at other institutions who have published with this person. They are sorted by most publications to least. Click on a name to open that person's profile page at their institution in a new window. <strong>Please note</strong>: Data is not available from all institutions so this list may not include all co-authors.</div>
   				<div id="coll-list">
   				</div>
	   		</div>	
	   		<div id="debug" style="display:none"></div>	
   		</div>
	]]>
	</Content>
</Module>
